
server{
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        ssl_certificate /stuf.crt;
        ssl_certificate_key /stuf.key;
        ssl_protocols TLSv1.2; 
      #   SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.php index.html;

        server_name _;

    location / {
    try_files $uri $uri/ /index.php?$args;
  }
        # pass PHP scripts to FastCGI server
        #
        # location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        # #
        # #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/run/php/php7.3-fpm.sock;
        # #       # With php-cgi (or other tcp sockets):
        # #       fastcgi_pass 127.0.0.1:9000;
        # }
        location ~ \.php$ {
                # include snippets/fastcgi-php.conf;     
            # fastcgi_pass unix:/var/run/php/php7.3-fpm.sock; # using php7.2
            include snippets/fastcgi-php.conf;
            fastcgi_pass wordpress:9000;
            # fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #     include fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
#         location ~ /\.ht {
#               deny all;
#          }
}